<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd" >


	<description>Spring公共配置文件</description>

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 本地开发环境配置 <value>classpath*:/application.local.properties</value> -->
				<!-- 服务器生产环境配置 -->
				<!-- <value>file:/var/myapp/application.server.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- Spring iBatis SqlMapClient -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="dataSource" ref="dataSource1" />
	</bean>
	
	<bean id="sqlMapClient2" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="dataSource" ref="dataSource2" />
	</bean>


	<!-- Spring iBatisTemplate -->
	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient" />
		</property>
	</bean>
	
	<!-- Spring iBatisTemplate2 -->
	<bean id="sqlMapClientTemplate2" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient2" />
		</property>
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- jotm工厂bean -->
	<bean id="jotm" class="com.ssi.bean.JotmFactoryBean" />

	<bean id="dataSource1" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource" destroy-method="shutdown">
		<property name="dataSource">
			<bean class="org.enhydra.jdbc.standard.StandardXADataSource" destroy-method="shutdown">
				<property name="transactionManager">
					<ref local="jotm" />
				</property>
				<property name="driverName">
					<value>com.mysql.jdbc.Driver</value>
				</property>
				<property name="url">
					<value>jdbc:mysql://192.168.108.13:3306/test</value>
				</property>
			</bean>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>123456</value>
		</property>
	</bean>

	<bean id="dataSource2" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource" destroy-method="shutdown">
		<property name="dataSource">
			<bean class="org.enhydra.jdbc.standard.StandardXADataSource" destroy-method="shutdown">
				<property name="transactionManager">
					<ref local="jotm" />
				</property>
				<property name="driverName">
					<value>com.mysql.jdbc.Driver</value>
				</property>
				<property name="url">
					<value>jdbc:mysql://127.0.0.1:3306/blog</value>
				</property>
			</bean>
		</property>
		<property name="user" value="root" />
		<property name="password" value="" />
	</bean>    


	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="userTransaction">
			<ref local="jotm" />
		</property>
	</bean>


	<!-- 以AspectJ方式 定义 AOP -->
	<!-- com.ssi.service 包及子包 匹配Service类 -->
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.ssi.service..*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*"  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="find*"  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="query*"  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="select*"  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="trans*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 使用annotation定义AOP -->
	<aop:aspectj-autoproxy />
	
	<context:component-scan base-package="com.ssi" />
</beans>