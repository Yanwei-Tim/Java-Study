<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>AuthServer</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>login.html</welcome-file>
  </welcome-file-list>
  	<security-constraint>
		<web-resource-collection>
			<web-resource-name>AuthServer</web-resource-name>
			<!-- 将 URL 映射设为 /* ，整个应用都要求是 HTTPS 访问,访问http时会自动重定向302到https -->
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<!-- 你希望关闭 SSL ，只需要将 CONFIDENTIAL 改为 NONE 即可 -->
			<transport-guarantee>NONE</transport-guarantee>
		</user-data-constraint>
	</security-constraint>
  <servlet>
    <description></description>
    <display-name>AuthPassword</display-name>
    <servlet-name>AuthPassword</servlet-name>
    <servlet-class>com.unistrong.authserver.servlets.AuthPasswordServlet</servlet-class>
  </servlet>
   <servlet>
    <description></description>
    <display-name>AuthTicket</display-name>
    <servlet-name>AuthTicket</servlet-name>
    <servlet-class>com.unistrong.authserver.servlets.AuthTicketServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>AuthPassword</servlet-name>
    <url-pattern>/AuthPassword</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AuthTicket</servlet-name>
    <url-pattern>/AuthTicket</url-pattern>
  </servlet-mapping>

	<resource-ref>
		<description>mysql数据库连接池</description>
		<!-- 参考数据源名字,同Tomcat中配置的Resource节点中name属性值"jdbc/mysqlds"一致 -->
		<res-ref-name>jdbc/mysqlds</res-ref-name>
		<!-- 资源类型 -->
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>
  
</web-app>